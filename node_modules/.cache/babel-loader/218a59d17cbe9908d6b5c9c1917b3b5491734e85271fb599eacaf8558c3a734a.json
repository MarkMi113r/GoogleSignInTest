{"ast":null,"code":"var _jsxFileName = \"/Users/markmiller/mu/googleSignInTest/googlesignintest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { googleLogout } from \"@react-oauth/google\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState();\n  const [profile, setProfile] = useState([]);\n\n  // log out function to log the user out of google and set the profile array to null\n  const logOut = () => {\n    googleLogout();\n    setProfile(null);\n  };\n  function onSignIn(googleUser) {\n    var profile = googleUser.getBasicProfile();\n    console.log(\"ID: \" + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log(\"Name: \" + profile.getName());\n    console.log(\"Image URL: \" + profile.getImageUrl());\n    console.log(\"Email: \" + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h2>React Google Login</h2>\n    //   <br />\n    //   <br />\n    //   {profile ? (\n    //     <div>\n    //       <img src={profile.picture} alt=\"user image\" />\n    //       <h3>User Logged in</h3>\n    //       <p>Name: {profile.name}</p>\n    //       <p>Email Address: {profile.email}</p>\n    //       <br />\n    //       <br />\n    //       {JSON.stringify(profile)}\n    //       <button onClick={logOut}>Log out</button>\n    //     </div>\n    //   ) : (\n    //     <div className=\"shadow-2xl\">\n    //       <Login setProfile={setProfile} />\n    //     </div>\n    //   )}\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"g-signin2\",\n        \"data-onsuccess\": onSignIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(App, \"s9MDNCQCM8GoM6CVupzlYb1anUc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["googleLogout","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","profile","setProfile","logOut","onSignIn","googleUser","getBasicProfile","console","log","getId","getName","getImageUrl","getEmail","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/markmiller/mu/googleSignInTest/googlesignintest/src/App.tsx"],"sourcesContent":["import { googleLogout } from \"@react-oauth/google\";\nimport { useState } from \"react\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const [user, setUser] = useState<any>();\n  const [profile, setProfile] = useState<any>([]);\n\n  // log out function to log the user out of google and set the profile array to null\n  const logOut = () => {\n    googleLogout();\n    setProfile(null);\n  };\n\n  function onSignIn(googleUser: any) {\n    var profile = googleUser.getBasicProfile();\n    console.log(\"ID: \" + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log(\"Name: \" + profile.getName());\n    console.log(\"Image URL: \" + profile.getImageUrl());\n    console.log(\"Email: \" + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n\n  return (\n    // <div>\n    //   <h2>React Google Login</h2>\n    //   <br />\n    //   <br />\n    //   {profile ? (\n    //     <div>\n    //       <img src={profile.picture} alt=\"user image\" />\n    //       <h3>User Logged in</h3>\n    //       <p>Name: {profile.name}</p>\n    //       <p>Email Address: {profile.email}</p>\n    //       <br />\n    //       <br />\n    //       {JSON.stringify(profile)}\n    //       <button onClick={logOut}>Log out</button>\n    //     </div>\n    //   ) : (\n    //     <div className=\"shadow-2xl\">\n    //       <Login setProfile={setProfile} />\n    //     </div>\n    //   )}\n    // </div>\n    <>\n      {/* <div\n        id=\"g_id_onload\"\n        data-client_id=\"6820783371-5i5301c4dcmcrhpq6pv08dbh5497qp2i.apps.googleusercontent.com\"\n        data-context=\"signin\"\n        data-ux_mode=\"redirect\"\n        data-login_uri=\"localhost:8080/api/login\"\n        data-auto_prompt=\"false\"\n      ></div>\n\n      <div\n        className=\"g_id_signin\"\n        data-type=\"standard\"\n        data-shape=\"rectangular\"\n        data-theme=\"outline\"\n        data-text=\"signin_with\"\n        data-size=\"large\"\n        data-logo_alignment=\"left\"\n      ></div> */}\n      <div className=\"g-signin2\" data-onsuccess={onSignIn}></div>\n    </>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,qBAAqB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAM,CAAC;EACvC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAM,EAAE,CAAC;;EAE/C;EACA,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAAC,CAAC;IACdW,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,SAASE,QAAQA,CAACC,UAAe,EAAE;IACjC,IAAIJ,OAAO,GAAGI,UAAU,CAACC,eAAe,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,MAAM,GAAGP,OAAO,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvCF,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGP,OAAO,CAACS,OAAO,CAAC,CAAC,CAAC;IACzCH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGP,OAAO,CAACU,WAAW,CAAC,CAAC,CAAC;IAClDJ,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGP,OAAO,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAlB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,eAmBEnB,OAAA;QAAKoB,SAAS,EAAC,WAAW;QAAC,kBAAgBV;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,gBAC3D;EAAC;AAEP;AAACpB,EAAA,CA9DQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}